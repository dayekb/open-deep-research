#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ API –∫–ª—é—á–∞
"""

import requests
import os
from dotenv import load_dotenv

def test_new_key():
    """–¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞"""
    print("üîë –¢–ï–°–¢ –ù–û–í–û–ì–û API –ö–õ–Æ–ß–ê")
    print("=" * 40)
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º .env
    load_dotenv(override=True)
    
    api_key = os.getenv("OPENROUTER_API_KEY")
    print(f"–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –∫–ª—é—á: {api_key[:20]}...")
    
    if not api_key:
        print("‚ùå –ö–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    headers = {
        "Authorization": f"Bearer {api_key}",
        "Content-Type": "application/json"
    }
    
    # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
    data = {
        "model": "deepseek/deepseek-chat-v3.1:free",
        "messages": [{"role": "user", "content": "Hi! Reply 'OK'"}],
        "max_tokens": 5
    }
    
    try:
        print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API...")
        response = requests.post(
            "https://openrouter.ai/api/v1/chat/completions",
            headers=headers,
            json=data,
            timeout=10
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            content = result['choices'][0]['message']['content']
            print(f"‚úÖ –£–°–ü–ï–•! –û—Ç–≤–µ—Ç: {content}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

if __name__ == "__main__":
    success = test_new_key()
    
    if success:
        print("\nüéâ API –∫–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print("–ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å —Å–µ—Ä–≤–∏—Å:")
        print("  conda run python run_openrouter.py")
    else:
        print("\n‚ùå API –∫–ª—é—á –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–ª—é—á–∞ –Ω–∞ https://openrouter.ai/")
