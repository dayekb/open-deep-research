#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è API –∫–ª—é—á–∞ OpenRouter
"""

import os
from dotenv import load_dotenv, set_key

def update_api_key():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ API –∫–ª—é—á–∞"""
    print("üîë –û–ë–ù–û–í–õ–ï–ù–ò–ï API –ö–õ–Æ–ß–ê OPENROUTER")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π .env
    load_dotenv()
    current_key = os.getenv("OPENROUTER_API_KEY")
    
    if current_key:
        print(f"–¢–µ–∫—É—â–∏–π –∫–ª—é—á: {current_key[:20]}...")
    else:
        print("–¢–µ–∫—É—â–∏–π –∫–ª—é—á: –ù–ï –ù–ê–ô–î–ï–ù")
    
    print("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π API –∫–ª—é—á OpenRouter:")
    print("(–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞)")
    
    new_key = input("–ù–æ–≤—ã–π –∫–ª—é—á: ").strip()
    
    if not new_key:
        print("‚ùå –ö–ª—é—á –Ω–µ –≤–≤–µ–¥–µ–Ω")
        return False
    
    if not new_key.startswith("sk-or-v1-"):
        print("‚ö†Ô∏è  –ö–ª—é—á –Ω–µ –ø–æ—Ö–æ–∂ –Ω–∞ OpenRouter API –∫–ª—é—á")
        print("   –û–±—ã—á–Ω–æ –∫–ª—é—á–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 'sk-or-v1-'")
        confirm = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): ").strip().lower()
        if confirm != 'y':
            return False
    
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª
        set_key('.env', 'OPENROUTER_API_KEY', new_key)
        print(f"‚úÖ –ö–ª—é—á –æ–±–Ω–æ–≤–ª–µ–Ω: {new_key[:20]}...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∫–ª—é—á
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞...")
        test_new_key(new_key)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")
        return False

def test_new_key(api_key):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞"""
    import requests
    
    headers = {
        "Authorization": f"Bearer {api_key}",
        "Content-Type": "application/json"
    }
    
    # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
    data = {
        "model": "deepseek/deepseek-chat-v3.1:free",
        "messages": [{"role": "user", "content": "Hi! Reply 'OK'"}],
        "max_tokens": 5
    }
    
    try:
        response = requests.post(
            "https://openrouter.ai/api/v1/chat/completions",
            headers=headers,
            json=data,
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            content = result['choices'][0]['message']['content']
            print(f"‚úÖ –ö–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—Ç–≤–µ—Ç: {content}")
            return True
        else:
            print(f"‚ùå –ö–ª—é—á –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    success = update_api_key()
    
    if success:
        print("\nüéâ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å:")
        print("  conda run python run_openrouter.py")
    else:
        print("\n‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–ª—é—á–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
