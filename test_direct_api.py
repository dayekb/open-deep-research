#!/usr/bin/env python3
"""
–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç API OpenRouter
"""

import requests
import json
import os
from dotenv import load_dotenv

def test_direct_api():
    """–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç API"""
    print("üîç –ü–†–Ø–ú–û–ô –¢–ï–°–¢ API OPENROUTER")
    print("=" * 50)
    
    load_dotenv()
    api_key = os.getenv("OPENROUTER_API_KEY")
    
    if not api_key:
        print("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"‚úÖ API –∫–ª—é—á: {api_key[:20]}...")
    
    headers = {
        "Authorization": f"Bearer {api_key}",
        "Content-Type": "application/json"
    }
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –º–æ–¥–µ–ª–∏
    models_to_test = [
        "deepseek/deepseek-chat-v3.1:free",
        "meta-llama/llama-3.3-8b-instruct:free", 
        "openai/gpt-oss-20b:free",
        "mistralai/mistral-7b-instruct:free",
        "google/gemma-3n-e2b-it:free"
    ]
    
    for model in models_to_test:
        print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å: {model}")
        
        data = {
            "model": model,
            "messages": [
                {"role": "user", "content": "Hi! Reply with just 'OK'"}
            ],
            "max_tokens": 5
        }
        
        try:
            response = requests.post(
                "https://openrouter.ai/api/v1/chat/completions",
                headers=headers,
                json=data,
                timeout=30
            )
            
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                result = response.json()
                content = result['choices'][0]['message']['content']
                print(f"   ‚úÖ –£–°–ü–ï–•! –û—Ç–≤–µ—Ç: {content}")
                return True
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
                
        except Exception as e:
            print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    print("\n‚ùå –í—Å–µ –º–æ–¥–µ–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")
    return False

def check_account_info():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ"""
    print("\nüë§ –ü–†–û–í–ï–†–ö–ê –ê–ö–ö–ê–£–ù–¢–ê")
    print("=" * 30)
    
    load_dotenv()
    api_key = os.getenv("OPENROUTER_API_KEY")
    
    headers = {
        "Authorization": f"Bearer {api_key}",
        "Content-Type": "application/json"
    }
    
    try:
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
        response = requests.get("https://openrouter.ai/api/v1/auth/key", headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª—é—á–∞: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ –ö–ª—é—á –≤–∞–ª–∏–¥–µ–Ω")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
        else:
            print(f"‚ùå –ö–ª—é—á –Ω–µ–≤–∞–ª–∏–¥–µ–Ω: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_account_info()
    success = test_direct_api()
    
    if not success:
        print("\nüí° –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:")
        print("1. API –∫–ª—é—á –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω –∏–ª–∏ –∏—Å—Ç–µ–∫")
        print("2. –£ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ—Ç –∫—Ä–µ–¥–∏—Ç–æ–≤")
        print("3. –ö–ª—é—á –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∞")
        print("4. –ú–æ–¥–µ–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞")
        print("\nüîß –†–ï–®–ï–ù–ò–Ø:")
        print("1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://openrouter.ai/ –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞")
        print("2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π API –∫–ª—é—á")
        print("3. –î–æ–±–∞–≤—å—Ç–µ –∫—Ä–µ–¥–∏—Ç—ã –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç")
        print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å")
