#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ç–µ—Å—Ç –∞–≥–µ–Ω—Ç–∞
"""

import os
import asyncio
import sys
from pathlib import Path
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.append(str(Path(__file__).parent / "src"))

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv(override=True)

from src.agents import VKRTopicAgent, TopicGenerationConfig
from src.models import EducationLevel


async def test_agent_debug():
    """–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ç–µ—Å—Ç –∞–≥–µ–Ω—Ç–∞"""
    print("üîç –û–¢–õ–ê–î–û–ß–ù–´–ô –¢–ï–°–¢ –ê–ì–ï–ù–¢–ê")
    print("=" * 40)
    
    agent = VKRTopicAgent()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    config = TopicGenerationConfig(
        field="–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
        level=EducationLevel.BACHELOR,
        count=1
    )
    
    print("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"  –ü–æ–ª–µ: {config.field}")
    print(f"  –£—Ä–æ–≤–µ–Ω—å: {config.level}")
    print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {config.count}")
    
    try:
        print("\n–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–º—ã...")
        topics = await agent.generate_topics(config)
        
        print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {len(topics)} —Ç–µ–º")
        
        for i, topic in enumerate(topics, 1):
            print(f"\n–¢–µ–º–∞ {i}:")
            print(f"  –ó–∞–≥–æ–ª–æ–≤–æ–∫: {topic.title}")
            print(f"  –û–ø–∏—Å–∞–Ω–∏–µ: {topic.description}")
            print(f"  –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {topic.keywords}")
            print(f"  –°–ª–æ–∂–Ω–æ—Å—Ç—å: {topic.difficulty_level}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False


if __name__ == "__main__":
    asyncio.run(test_agent_debug())
