#!/usr/bin/env python3
"""
–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –∞–≥–µ–Ω—Ç–∞ –±–µ–∑ API
"""

import os
import asyncio
import sys
from pathlib import Path
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.append(str(Path(__file__).parent / "src"))

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv(override=True)

from src.agents import VKRTopicAgent, TopicGenerationConfig
from src.models import EducationLevel


async def test_agent_direct():
    """–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –∞–≥–µ–Ω—Ç–∞"""
    print("ü§ñ –ü–†–Ø–ú–û–ô –¢–ï–°–¢ –ê–ì–ï–ù–¢–ê")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
    api_key = os.getenv("OPENROUTER_API_KEY")
    print(f"API –∫–ª—é—á: {api_key[:20]}...")
    
    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    try:
        agent = VKRTopicAgent()
        print("‚úÖ –ê–≥–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    print("\nüìö –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–º...")
    
    config = TopicGenerationConfig(
        field="–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
        level=EducationLevel.BACHELOR,
        count=1
    )
    
    try:
        print("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏...")
        topics = await agent.generate_topics(config)
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(topics)} —Ç–µ–º")
        
        for i, topic in enumerate(topics, 1):
            print(f"\n–¢–µ–º–∞ {i}:")
            print(f"  –ó–∞–≥–æ–ª–æ–≤–æ–∫: {topic.title}")
            print(f"  –û–ø–∏—Å–∞–Ω–∏–µ: {topic.description}")
            print(f"  –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {topic.keywords}")
            print(f"  –°–ª–æ–∂–Ω–æ—Å—Ç—å: {topic.difficulty}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False


async def test_raw_model():
    """–¢–µ—Å—Ç —Å—ã—Ä–æ–≥–æ –≤—ã–∑–æ–≤–∞ –º–æ–¥–µ–ª–∏"""
    print("\nüîß –¢–ï–°–¢ –°–´–†–û–ì–û –í–´–ó–û–í–ê –ú–û–î–ï–õ–ò")
    print("=" * 40)
    
    from src.agents.vkr_topic_agent import VKRTopicAgent
    
    agent = VKRTopicAgent()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –º–æ–¥–µ–ª–∏
    try:
        print("–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ LLM...")
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–º–ø—Ç
        prompt = "–ü—Ä–∏–≤–µ—Ç! –û—Ç–≤–µ—Ç—å –∫–æ—Ä–æ—Ç–∫–æ: '–¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ'"
        
        # –í—ã–∑—ã–≤–∞–µ–º –º–æ–¥–µ–ª—å –Ω–∞–ø—Ä—è–º—É—é
        response = await agent.llm.ainvoke(prompt)
        
        print(f"‚úÖ –û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏: {response.content}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–ì–ï–ù–¢–ê")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –°—ã—Ä–æ–π –≤—ã–∑–æ–≤ –º–æ–¥–µ–ª–∏
    success1 = await test_raw_model()
    
    if success1:
        print("\n‚úÖ –ú–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        
        # –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–º
        success2 = await test_agent_direct()
        
        if success2:
            print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò!")
        else:
            print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π —Ç–µ–º")
    else:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –º–æ–¥–µ–ª—å—é")


if __name__ == "__main__":
    asyncio.run(main())
