#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç API —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
"""

import requests
import json
import time

def test_detailed():
    """–î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç API"""
    print("üîç –î–ï–¢–ê–õ–¨–ù–´–ô –¢–ï–°–¢ API")
    print("=" * 40)
    
    base_url = "http://localhost:8000"
    
    # –¢–µ—Å—Ç 1: Health check
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è...")
    try:
        response = requests.get(f"{base_url}/health")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç: {data['status']}")
            print(f"   –ú–æ–¥–µ–ª—å: {data['model']}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–º —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
    print("\n2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–º...")
    
    payload = {
        "field": "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
        "level": "–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç",
        "count": 2,
        "difficulty": "–°—Ä–µ–¥–Ω—è—è",
        "keywords": ["–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ", "–∞–ª–≥–æ—Ä–∏—Ç–º—ã"]
    }
    
    print(f"   –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å: {json.dumps(payload, ensure_ascii=False, indent=2)}")
    
    try:
        start_time = time.time()
        response = requests.post(
            f"{base_url}/generate-topics",
            json=payload,
            headers={"Content-Type": "application/json"}
        )
        end_time = time.time()
        
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –í—Ä–µ–º—è: {end_time - start_time:.2f}—Å")
        
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ!")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–º: {len(data.get('topics', []))}")
            
            for i, topic in enumerate(data.get('topics', []), 1):
                print(f"\n   –¢–µ–º–∞ {i}:")
                print(f"     –ó–∞–≥–æ–ª–æ–≤–æ–∫: {topic.get('title', '–ù–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
                print(f"     –û–ø–∏—Å–∞–Ω–∏–µ: {topic.get('description', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')}")
                print(f"     –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {topic.get('keywords', [])}")
                print(f"     –°–ª–æ–∂–Ω–æ—Å—Ç—å: {topic.get('difficulty', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ—Å—Ç–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
    print("\n3. –ü—Ä–æ—Å—Ç–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è...")
    
    simple_payload = {
        "field": "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
        "level": "–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç",
        "count": 1
    }
    
    try:
        response = requests.post(
            f"{base_url}/generate-topics",
            json=simple_payload,
            headers={"Content-Type": "application/json"}
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ! –¢–µ–º: {len(data.get('topics', []))}")
            if data.get('topics'):
                topic = data['topics'][0]
                print(f"   –¢–µ–º–∞: {topic.get('title', '–ù–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

if __name__ == "__main__":
    test_detailed()
