#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–µ—Ä–≤–∏—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–º –í–ö–† —Å –Ω–æ–≤—ã–º API –∫–ª—é—á–æ–º
"""

import os
import asyncio
import sys
from pathlib import Path
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.append(str(Path(__file__).parent / "src"))

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv(override=True)

from src.agents import VKRTopicAgent, TopicGenerationConfig
from src.models import EducationLevel


async def test_vkr_service():
    """–¢–µ—Å—Ç —Å–µ—Ä–≤–∏—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–º"""
    print("üöÄ –¢–ï–°–¢ –°–ï–†–í–ò–°–ê –ì–ï–ù–ï–†–ê–¶–ò–ò –¢–ï–ú –í–ö–†")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
    api_key = os.getenv("OPENROUTER_API_KEY")
    if not api_key:
        print("‚ùå OPENROUTER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print(f"‚úÖ API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω: {api_key[:20]}...")
    
    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    try:
        agent = VKRTopicAgent()
        print("‚úÖ –ê–≥–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ç–µ–º
    print("\nüìö –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–º –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ...")
    
    config = TopicGenerationConfig(
        field="–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
        level=EducationLevel.BACHELOR,
        count=2
    )
    
    try:
        topics = await agent.generate_topics(config)
        print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(topics)} —Ç–µ–º:")
        
        for i, topic in enumerate(topics, 1):
            print(f"\n{i}. {topic.title}")
            print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {topic.description}")
            print(f"   –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {', '.join(topic.keywords)}")
            print(f"   –°–ª–æ–∂–Ω–æ—Å—Ç—å: {topic.difficulty}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        return False


async def test_different_fields():
    """–¢–µ—Å—Ç —Ä–∞–∑–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π"""
    print("\nüî¨ –¢–ï–°–¢ –†–ê–ó–ù–´–• –ù–ê–ü–†–ê–í–õ–ï–ù–ò–ô")
    print("=" * 40)
    
    agent = VKRTopicAgent()
    
    test_configs = [
        ("–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", EducationLevel.BACHELOR, 1),
        ("–§–∏–∑–∏–∫–∞", EducationLevel.MASTER, 1),
        ("–•–∏–º–∏—è", EducationLevel.BACHELOR, 1)
    ]
    
    for field, level, count in test_configs:
        print(f"\nüìñ {field} ({level.value})...")
        
        config = TopicGenerationConfig(
            field=field,
            level=level,
            count=count
        )
        
        try:
            topics = await agent.generate_topics(config)
            print(f"   ‚úÖ {len(topics)} —Ç–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ")
            if topics:
                print(f"   üìù –ü—Ä–∏–º–µ—Ä: {topics[0].title}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ï–†–í–ò–°–ê –í–ö–†")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –û—Å–Ω–æ–≤–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
    success = await test_vkr_service()
    
    if success:
        print("\nüéâ –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        
        # –¢–µ—Å—Ç 2: –†–∞–∑–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        await test_different_fields()
        
        print("\n‚úÖ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´!")
        print("\nüöÄ –°–µ—Ä–≤–∏—Å –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: conda run python run_openrouter.py")
        
    else:
        print("\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ API –∫–ª—é—á")


if __name__ == "__main__":
    asyncio.run(main())
